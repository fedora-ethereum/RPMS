From: Peter Lemenkov <lemenkov@gmail.com>
Date: Sat, 10 Feb 2024 11:01:32 +0100
Subject: [PATCH] Remove asn1tools as a dependency

Signed-off-by: Peter Lemenkov <lemenkov@gmail.com>

diff --git a/eth_keys/utils/der.py b/eth_keys/utils/der.py
index c06e591..a34e6f1 100644
--- a/eth_keys/utils/der.py
+++ b/eth_keys/utils/der.py
@@ -2,7 +2,7 @@
 # We locally implement serialization and deserialization for this specific spec
 #   with constrained inputs.
 # This is done locally to avoid importing a 3rd-party library, in this very sensitive
-# project. asn1tools and pyasn1 were used as reference APIs, see how in
+# project. pyasn1 is used as reference APIs, see how in
 # tests/core/test_utils_asn1.py
 #
 # See more about DER encodings, and ASN.1 in general, here:
diff --git a/setup.py b/setup.py
index aeddff9..00cba2e 100644
--- a/setup.py
+++ b/setup.py
@@ -22,7 +22,6 @@ extras_require = {
     ],
     "test": [
         "pytest>=7.0.0",
-        "asn1tools>=0.146.2",
         "factory-boy>=3.0.1",
         "pyasn1>=0.4.5",
         "hypothesis>=5.10.3,<6",
diff --git a/tests/core/test_utils_der.py b/tests/core/test_utils_der.py
index 0afe8ee..1943fde 100644
--- a/tests/core/test_utils_der.py
+++ b/tests/core/test_utils_der.py
@@ -1,4 +1,3 @@
-import asn1tools
 from hypothesis import (
     example,
     given,
@@ -28,16 +27,6 @@ ECDSASpec DEFINITIONS ::= BEGIN
      }
 END
 """
-ASN1_SPEC = asn1tools.compile_string(ASN1_ECDSA_SPEC_STRING, "der")
-
-
-def asn1tools_encode(r, s):
-    return ASN1_SPEC.encode("ECDSASignature", {"r": r, "s": s})
-
-
-def asn1tools_decode(encoded):
-    decoded = ASN1_SPEC.decode("ECDSASignature", encoded)
-    return decoded["r"], decoded["s"]
 
 
 class TwoInts(univ.Sequence):
@@ -66,17 +55,13 @@ uint32strategy = st.integers(min_value=0, max_value=MAX_32_BYTE_INT)
 @pytest.mark.parametrize(
     "encoder, decoder",
     (
-        (two_int_sequence_encoder, asn1tools_decode),
         (two_int_sequence_encoder, pyasn1_decode),
         (two_int_sequence_encoder, two_int_sequence_decoder),
-        (asn1tools_encode, two_int_sequence_decoder),
         (pyasn1_encode, two_int_sequence_decoder),
     ),
     ids=(
-        "local_encode=>asn1tools_decode",
         "local_encode=>pyasn1_decode",
         "local_encode=>local_decode",
-        "asn1tools_encode=>local_decode",
         "pyasn1_encode=>local_decode",
     ),
 )
