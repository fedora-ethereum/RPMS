From: Peter Lemenkov <lemenkov@gmail.com>
Date: Sun, 5 Feb 2023 11:00:22 +0100
Subject: [PATCH] Suppress one particular check (dangling-reference)

Signed-off-by: Peter Lemenkov <lemenkov@gmail.com>

diff --git a/libsolidity/analysis/FunctionCallGraph.cpp b/libsolidity/analysis/FunctionCallGraph.cpp
index e941c99c5..4ed305616 100644
--- a/libsolidity/analysis/FunctionCallGraph.cpp
+++ b/libsolidity/analysis/FunctionCallGraph.cpp
@@ -97,6 +97,8 @@ CallGraph FunctionCallGraphBuilder::buildDeployedGraph(
 	// assigned to state variables and as such may be reachable after deployment as well.
 	builder.m_currentNode = CallGraph::SpecialNode::InternalDispatch;
 	set<CallGraph::Node, CallGraph::CompareByID> defaultNode;
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Werror"
 	for (CallGraph::Node const& dispatchTarget: util::valueOrDefault(_creationGraph.edges, CallGraph::SpecialNode::InternalDispatch, defaultNode))
 	{
 		solAssert(!holds_alternative<CallGraph::SpecialNode>(dispatchTarget), "");
@@ -105,6 +107,7 @@ CallGraph FunctionCallGraphBuilder::buildDeployedGraph(
 		// Visit the callable to add not only it but also everything it calls too
 		builder.functionReferenced(*get<CallableDeclaration const*>(dispatchTarget), false);
 	}
+#pragma GCC diagnostic pop
 
 	builder.m_currentNode = CallGraph::SpecialNode::Entry;
 	builder.processQueue();
